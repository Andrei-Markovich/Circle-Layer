name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies (omit optional)
        run: npm ci --omit=optional || npm install --omit=optional

      - name: Install solidity analyzer for Linux
        if: runner.os == 'Linux'
        run: npm i -D @nomicfoundation/solidity-analyzer-linux-x64-gnu

      - name: Compile
        run: npm run compile

      - name: Test
        run: npx hardhat test

      - name: Who am I (print deployer & balance)
        env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          set -euo pipefail
          out=$(npx hardhat run scripts/whoami.js --network circleLayerTestnet)
          echo "$out"
          echo "### Deployer check" >> "$GITHUB_STEP_SUMMARY"
          echo "$out" >> "$GITHUB_STEP_SUMMARY"


  deploy:
    name: Deploy to Circle Layer Testnet
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install deps (omit optional)
        run: npm ci --omit=optional || npm install --omit=optional

      - name: Install solidity analyzer for Linux
        if: runner.os == 'Linux'
        run: npm i -D @nomicfoundation/solidity-analyzer-linux-x64-gnu

      - name: Deploy
        id: deploy
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          EXPLORER_BASE: ${{ vars.EXPLORER_BASE }}
        shell: bash
        run: |
          set -euo pipefail
          # deploy and capture output
          npm run -s deploy | tee deploy.log

          # parse address
          addr=$(sed -n 's/^SimpleStorage address: //p' deploy.log | tail -1)
          if [[ -z "$addr" ]]; then
            echo "::error::Couldn't parse SimpleStorage address from deploy output"
            cat deploy.log
            exit 1
          fi
          echo "SIMPLE_STORAGE=$addr"          >> "$GITHUB_ENV"
          echo "TRUFFLE_SIMPLE_STORAGE=$addr"  >> "$GITHUB_ENV"
          echo "address=$addr"                 >> "$GITHUB_OUTPUT"

          # summary
          echo "### Deployed SimpleStorage"            >> "$GITHUB_STEP_SUMMARY"
          echo                                         >> "$GITHUB_STEP_SUMMARY"
          echo "Address: $addr"                        >> "$GITHUB_STEP_SUMMARY"
          if [ -n "${EXPLORER_BASE:-}" ]; then
            echo "Explorer: ${EXPLORER_BASE}/address/$addr" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Export ABI
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: node scripts/exportAbi.js

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deployments-${{ github.sha }}
          path: deployments/**
