name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SIMPLE_STORAGE: ${{ vars.SIMPLE_STORAGE }}
      CIRCLE_RPC_URL: ${{ secrets.CIRCLE_RPC_URL }}
      CHAIN_ID: ${{ vars.CHAIN_ID }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Update npm
        run: npm i -g npm@latest

      - name: Show versions
        run: |
          node -v
          npm -v

      - name: Install deps (Linux-safe, omit optional)
        shell: bash
        env:
          NPM_CONFIG_OPTIONAL: "false"
        run: |
          set -e
          npm ci --omit=optional --no-optional || {
            if grep -Eiq 'EBADPLATFORM|Unsupported platform.*fsevents' /home/runner/.npm/_logs/*-debug-*.log; then
              echo "::notice::Ignoring EBADPLATFORM for fsevents on Linux and continuing."
              exit 0
            else
              echo "::error::npm ci failed for a different reason."
              exit 1
            fi
          }

      - name: Prune optional deps & verify fsevents skipped
        shell: bash
        run: |
          set -e
          npm prune --omit=optional
          npm ls fsevents || true

      - name: Ensure Hardhat analyzer + dotenv
        run: npm i -D @nomicfoundation/solidity-analyzer-linux-x64-gnu dotenv

      - name: Compile (verbose)
        shell: bash
        run: |
          set -e
          echo "----- hardhat.config preview -----"
          [ -f hardhat.config.js ] && sed -n '1,200p' hardhat.config.js || true
          [ -f hardhat.config.ts ] && sed -n '1,200p' hardhat.config.ts || true
          echo "----------------------------------"
          npx hardhat clean
          npx hardhat compile --show-stack-traces

      - name: Export ABI for artifacts
        run: node scripts/exportAbi.js

      - name: List outputs
        run: |
          echo "## Files" >> $GITHUB_STEP_SUMMARY
          ls -la abi || true >> $GITHUB_STEP_SUMMARY
          ls -la deployments || true >> $GITHUB_STEP_SUMMARY
          ls -la artifacts/contracts/SimpleStorage.sol || true >> $GITHUB_STEP_SUMMARY

      - name: Upload ABI
        uses: actions/upload-artifact@v4
        with:
          name: abi-${{ github.sha }}
          path: abi/SimpleStorage.json
          if-no-files-found: error
          retention-days: 7

      - name: Upload deployment JSON (optional)
        uses: actions/upload-artifact@v4
        with:
          name: deployment-${{ github.sha }}
          path: deployments/**/SimpleStorage.json
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload hardhat artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: hardhat-artifact-${{ github.sha }}
          path: artifacts/contracts/SimpleStorage.sol/SimpleStorage.json
          if-no-files-found: ignore
          retention-days: 7

      # ---------- PRE-FLIGHT ----------
      - name: "Preflight – validate secrets for deploy (manual)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
          set -e
          if [ -z "${CIRCLE_RPC_URL:-}" ]; then
            echo "::error::CIRCLE_RPC_URL secret is empty."; exit 1
          fi
          if ! echo "$CIRCLE_RPC_URL" | grep -Eq '^https?://'; then
            echo "::error::CIRCLE_RPC_URL must start with http(s):// (masked value shown in UI). Set a real RPC URL in repo Settings → Secrets."; exit 1
          fi
          if [ -z "${PRIVATE_KEY:-}" ]; then
            echo "::error::PRIVATE_KEY secret is empty."; exit 1
          fi
          if ! echo "$PRIVATE_KEY" | grep -Eq '^(0x)?[0-9a-fA-F]{64}$'; then
            echo "::error::PRIVATE_KEY must be 64 hex chars (with optional 0x)."; exit 1
          fi
          echo "Preflight OK."

      # ---------- DEPLOY (manual only) ----------
      - name: "Deploy SimpleStorage (manual only)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: deploy
        shell: bash
        run: |
          set -e
          echo "Starting deploy…"
          ADDR=$(npx hardhat run --network circleLayerTestnet scripts/deploy.js | grep -Eoi '0x[a-fA-F0-9]{40}' | tail -1)
          if [ -z "$ADDR" ]; then
            echo "::error::Deploy script didn't print an address"; exit 1
          fi
          echo "address=$ADDR" >> $GITHUB_OUTPUT
          echo "### Deployed SimpleStorage" >> $GITHUB_STEP_SUMMARY
          echo "- Address: \`$ADDR\`" >> $GITHUB_STEP_SUMMARY
          mkdir -p deployments/circleLayerTestnet
          echo "{\"address\":\"$ADDR\"}" > deployments/circleLayerTestnet/SimpleStorage.address.json

      - name: Upload deployed address (optional)
        if: ${{ steps.deploy.outputs.address != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: deployed-address-${{ github.sha }}
          path: deployments/circleLayerTestnet/SimpleStorage.address.json
          if-no-files-found: error
          retention-days: 7

      - name: "Smoke read freshly deployed (optional)"
        if: ${{ steps.deploy.outputs.address != '' }}
        run: npx hardhat run --network circleLayerTestnet scripts/read.js ${{ steps.deploy.outputs.address }}

      - name: "Smoke: read existing SimpleStorage (optional)"
        if: ${{ steps.deploy.outputs.address == '' && env.SIMPLE_STORAGE != '' && env.CIRCLE_RPC_URL != '' }}
        run: npx hardhat run --network circleLayerTestnet scripts/read.js
