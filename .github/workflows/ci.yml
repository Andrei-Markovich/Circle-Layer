name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SIMPLE_STORAGE: ${{ vars.SIMPLE_STORAGE }}
      CIRCLE_RPC_URL: ${{ secrets.CIRCLE_RPC_URL }}
      CHAIN_ID: ${{ vars.CHAIN_ID }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Обновляем npm до последней версии (как рекомендовано)
      - name: Update npm
        run: npm i -g npm@latest

      - name: Show versions
        run: |
          node -v
          npm -v

      # Установка зависимостей с жёстким игнором EBADPLATFORM (fsevents на Linux)
      - name: Install deps (Linux-safe, omit optional)
        shell: bash
        env:
          NPM_CONFIG_OPTIONAL: "false"
        run: |
          set -e
          npm ci --omit=optional --no-optional || {
            if grep -Eiq 'EBADPLATFORM|Unsupported platform.*fsevents' /home/runner/.npm/_logs/*-debug-*.log; then
              echo "::notice::Ignoring EBADPLATFORM for fsevents on Linux and continuing."
              exit 0
            else
              echo "::error::npm ci failed for a different reason."
              exit 1
            fi
          }

      - name: Prune optional deps & verify fsevents skipped
        shell: bash
        run: |
          set -e
          npm prune --omit=optional
          npm ls fsevents || true

      # Чтобы компиляция Hardhat не споткнулась на бинарнике анализатора под Linux
      - name: Ensure Hardhat analyzer (Linux)
        run: npm i -D @nomicfoundation/solidity-analyzer-linux-x64-gnu

      - name: Compile (verbose)
        shell: bash
        run: |
          set -e
          echo "----- hardhat.config preview -----"
          [ -f hardhat.config.js ] && sed -n '1,200p' hardhat.config.js || true
          [ -f hardhat.config.ts ] && sed -n '1,200p' hardhat.config.ts || true
          echo "----------------------------------"
          npx hardhat clean
          npx hardhat compile --show-stack-traces

      - name: Export ABI for artifacts
        run: node scripts/exportAbi.js

      - name: List outputs
        run: |
          echo "## Files" >> $GITHUB_STEP_SUMMARY
          ls -la abi || true >> $GITHUB_STEP_SUMMARY
          ls -la deployments || true >> $GITHUB_STEP_SUMMARY
          ls -la artifacts/contracts/SimpleStorage.sol || true >> $GITHUB_STEP_SUMMARY

      # Загружаем ABI — должен быть всегда
      - name: Upload ABI
        uses: actions/upload-artifact@v4
        with:
          name: abi-${{ github.sha }}
          path: abi/SimpleStorage.json
          if-no-files-found: error
          retention-days: 7

      # Остальные артефакты — опционально
      - name: Upload deployment JSON (optional)
        uses: actions/upload-artifact@v4
        with:
          name: deployment-${{ github.sha }}
          path: deployments/**/SimpleStorage.json
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload hardhat artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: hardhat-artifact-${{ github.sha }}
          path: artifacts/contracts/SimpleStorage.sol/SimpleStorage.json
          if-no-files-found: ignore
          retention-days: 7

      # Дешёвый smoke-тест чтения из сети — только если заданы адрес и RPC
      - name: "Smoke: read SimpleStorage (optional)"
        if: ${{ env.SIMPLE_STORAGE != '' && env.CIRCLE_RPC_URL != '' }}
        run: npx hardhat run --network circleLayerTestnet scripts/read.js
