name: Deploy SimpleStorage

on:
  workflow_dispatch: {}

# нужно, чтобы:
# - коммитить deployments/*
# - править repository variables
permissions:
  contents: write
  actions: write
<<<<<<< HEAD
=======

concurrency:
  group: deploy-simplestorage
  cancel-in-progress: false
>>>>>>> 31a04e0 (ci: skip optional deps on Linux with --no-optional)

jobs:
  deploy:
    runs-on: ubuntu-latest
<<<<<<< HEAD
    env:
      NETWORK: circleLayerTestnet
=======
>>>>>>> 31a04e0 (ci: skip optional deps on Linux with --no-optional)

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Ð½ÑƒÐ¶Ð½Ð¾ Ð´Ð»Ñ rebase Ð¸ Ð¿ÑƒÑˆÐ°

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

<<<<<<< HEAD
      # ВАЖНО: без NPM_CONFIG_OPTIONAL. Только --omit=optional
      - name: Install deps (Linux-safe, omit optional)
        run: |
          set -e
          npm ci --omit=optional
          npm prune --omit=optional
          npm ls fsevents || true

      - name: Compile (ensure analyzer)
        shell: bash
        run: |
=======
      - name: Install deps (skip optional)
        run: npm ci --omit=optional --no-optional

      - name: Compile (ensure analyzer)
        shell: bash
        run: |
>>>>>>> 31a04e0 (ci: skip optional deps on Linux with --no-optional)
          node -e "try{require.resolve('@nomicfoundation/solidity-analyzer-linux-x64-gnu');process.exit(0)}catch(e){process.exit(1)}" \
          || npm i -D @nomicfoundation/solidity-analyzer-linux-x64-gnu
          npx hardhat compile

      - name: Deploy
        env:
          CIRCLE_RPC_URL: ${{ secrets.CIRCLE_RPC_URL }}
          PRIVATE_KEY:    ${{ secrets.PRIVATE_KEY }}
<<<<<<< HEAD
        run: npx hardhat run --network $NETWORK scripts/deploySimpleStorage.js

      - name: Read deployed address
        run: |
          set -e
          FILE="deployments/${NETWORK}/SimpleStorage.json"
          ADDR=$(node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync(process.argv[1],'utf8'));process.stdout.write(j.address||'');" "$FILE")
          echo "ADDRESS=$ADDR" >> $GITHUB_ENV
          echo "Network:  $NETWORK" >> $GITHUB_STEP_SUMMARY
          echo "Address:  $ADDR" >> $GITHUB_STEP_SUMMARY
          test -n "$ADDR"

      - name: Export ABI
        run: node scripts/exportAbi.js

      - name: Upload ABI
        uses: actions/upload-artifact@v4
        with:
          name: abi-${{ github.run_id }}
          path: abi/SimpleStorage.json
          if-no-files-found: error
          retention-days: 14

      - name: Upload deployment JSON
        uses: actions/upload-artifact@v4
        with:
          name: deployment-${{ github.run_id }}
          path: deployments/**/SimpleStorage.json
          if-no-files-found: error
          retention-days: 14

      - name: Upload hardhat artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: hardhat-artifact-${{ github.run_id }}
          path: artifacts/contracts/SimpleStorage.sol/SimpleStorage.json
          if-no-files-found: ignore
          retention-days: 14

      # === Фикс обновления переменной ===
      # Используем gh variable set (сам подберёт правильный REST)
      # и не роняем джоб, если прав нет/404
      - name: Update Actions variable SIMPLE_STORAGE
        if: ${{ env.ADDRESS != '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT || github.token }}
        run: |
          gh --version
          gh variable set SIMPLE_STORAGE \
            --repo "$GITHUB_REPOSITORY" \
            --body "$ADDRESS" \
          || echo "Skip variable update (no permission or API not available)"

      # Зафиксировать deployments/ в репозитории
      - name: Rebase with origin/main
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git rebase origin/main || git rebase --abort

      - name: Commit deployments file
        run: |
          git add deployments
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "chore(deploy): persist SimpleStorage at $ADDRESS"

      - name: Push
        run: git push origin HEAD:main
=======
        run: npx hardhat run --network circleLayerTestnet scripts/deploySimpleStorage.js

      - name: Read deployed address
        id: read_addr
        run: |
          ADDR=$(jq -r .address deployments/circleLayerTestnet/SimpleStorage.json)
          echo "ADDR=$ADDR" | tee -a $GITHUB_ENV
          echo "addr=$ADDR" >> $GITHUB_OUTPUT

      - name: Update Actions variable SIMPLE_STORAGE
        if: steps.read_addr.outputs.addr != ''
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -sSf -X PATCH \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/variables/SIMPLE_STORAGE" \
            -d "{\"name\":\"SIMPLE_STORAGE\",\"value\":\"${ADDR}\"}"

      - name: Rebase with origin/main
        run: |
          git config user.email "ci-bot@users.noreply.github.com"
          git config user.name  "ci-bot"
          git fetch origin main
          git pull --rebase origin main

      - name: Auto-commit deployments file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          file_pattern: deployments/circleLayerTestnet/SimpleStorage.json
          commit_message: "ci: track deployed SimpleStorage address"
          push_options: '--force-with-lease'

      - name: Job summary
        run: |
          echo "### Deploy completed" >> $GITHUB_STEP_SUMMARY
          echo "- Network: \`circleLayerTestnet\`" >> $GITHUB_STEP_SUMMARY
          echo "- Address: \`${{ steps.read_addr.outputs.addr }}\`" >> $GITHUB_STEP_SUMMARY

>>>>>>> 31a04e0 (ci: skip optional deps on Linux with --no-optional)
