name: Deploy SimpleStorage

on:
  workflow_dispatch:

permissions:
  contents: write      # для автокоммита deployments/*
  actions: write       # для обновления Actions Variables API

jobs:
  deploy:
    name: Deploy & persist address
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      CIRCLE_RPC_URL: ${{ secrets.CIRCLE_RPC_URL }}
      PRIVATE_KEY:    ${{ secrets.PRIVATE_KEY }}
      SIMPLE_STORAGE: ${{ secrets.SIMPLE_STORAGE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps (skip optional)
        run: |
          npm ci --omit=optional || npm install --omit=optional

      - name: Add Solidity analyzer (Linux)
        if: runner.os == 'Linux'
        run: npm i -D @nomicfoundation/solidity-analyzer-linux-x64-gnu || true

      - name: Compile
        run: npx hardhat compile

      - name: Deploy
        if: ${{ env.CIRCLE_RPC_URL && env.PRIVATE_KEY }}
        id: deploy
        shell: bash
        run: |
          set -e
          echo "Running deploy..."
          npm run deploy | tee deploy.log

          echo "---- Parse address from output ----"
          ADDR=$(grep -iE "Address:\s*0x[a-fA-F0-9]{40}" deploy.log | head -n1 | sed -E 's/.*Address:\s*(0x[a-fA-F0-9]{40}).*/\1/')
          if [ -z "$ADDR" ]; then
            echo "❌ Не удалось извлечь адрес из лога деплоя"
            exit 1
          fi

          echo "address=$ADDR" >> $GITHUB_OUTPUT
          echo "SIMPLE_STORAGE=$ADDR" >> $GITHUB_ENV

          {
            echo "## ✅ Deploy completed"
            echo ""
            echo "**Network:** \`circleLayerTestnet\`"
            echo ""
            echo "**Address:** \`$ADDR\`"
          } >> $GITHUB_STEP_SUMMARY

      - name: Persist address to repo (deployments/…)
        if: ${{ steps.deploy.outputs.address != '' }}
        shell: bash
        run: |
          set -e
          ADDR="${{ steps.deploy.outputs.address }}"
          mkdir -p deployments/circleLayerTestnet
          cat > deployments/circleLayerTestnet/SimpleStorage.json <<EOF
          {
            "address": "$ADDR",
            "network": "circleLayerTestnet",
            "updated": "$(date -u +%FT%TZ)"
          }
          EOF

      - name: Auto-commit deployments file
        if: ${{ steps.deploy.outputs.address != '' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: track deployed SimpleStorage address"
          file_pattern: deployments/circleLayerTestnet/SimpleStorage.json

      # 🔁 Обновляем/создаём Actions Variable SIMPLE_STORAGE в репозитории
      - name: Update repo variable SIMPLE_STORAGE
        if: ${{ steps.deploy.outputs.address != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const addr  = '${{ steps.deploy.outputs.address }}';
            const {owner, repo} = context.repo;
            const name = 'SIMPLE_STORAGE';
            try {
              await github.request('PATCH /repos/{owner}/{repo}/actions/variables/{name}', {
                owner, repo, name, value: addr
              });
              core.info(`Updated variable ${name}=${addr}`);
            } catch (e) {
              if (e.status === 404) {
                await github.request('POST /repos/{owner}/{repo}/actions/variables', {
                  owner, repo, name, value: addr
                });
                core.info(`Created variable ${name}=${addr}`);
              } else {
                core.setFailed(`Failed to upsert variable: ${e.message}`);
              }
            }

      - name: Smoke read (non-blocking)
        if: ${{ steps.deploy.outputs.address != '' }}
        continue-on-error: true
        env:
          SIMPLE_STORAGE: ${{ steps.deploy.outputs.address }}
        run: npm run read

      - name: Upload artifacts (deploy log + deployments/)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: deploy-output
          path: |
            deploy.log
            deployments/**
          if-no-files-found: ignore
          retention-days: 7
